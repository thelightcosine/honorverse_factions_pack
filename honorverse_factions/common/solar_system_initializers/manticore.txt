# Manticore Binary Star System
# Due to the way I had to make the binary star work I couldn't add the moons for Manticore
# Sphinx, or Gorgon. I also couldn't find a way to do all three of Manticore B's
# asteroid belts, so I've left them out for now. Hopefully, I can find a better way to do this.

manticore_system_initializer = {
	name = "Manticore System"
	class = "sc_g"
	flags = { manticore_system }
	usage = custom_empire


	# The Barycenter for the Manticore Binary system
	planet = {
		name = "Manticore Barycenter"
		orbit_distance = 0
		orbit_angle = 1
		size = 10
		has_ring = no	

		init_effect = {
			prevent_anomaly = yes
			add_resource = {
				resource = physics_research 
				amount = 4
				replace = yes
			}			
		}	
	}

	# Manticore A 
	planet = {
		name = "Manticore A"
		class = star
		orbit_distance = 100
		size = 10	

		moon = {
			name = "Salamander"
			class = "pc_molten"
			orbit_distance = 10
			orbit_angle = 15
			size = 10
			has_ring = no
		}
	
		moon = {
			name = "Phoenix"
			class = "pc_barren"
			orbit_distance = 10
			orbit_angle = 125
			size = 12
			has_ring = no
		}
	
		moon = {
			name = "Manticore"
			class = "pc_continental"
			orbit_distance = 20
			orbit_angle = 180
			size = { min = 16 max = 20 }
			has_ring = no
			home_planet = yes
			tile_blockers = none
			modifiers = none
		
			init_effect = {
				prevent_anomaly = yes		
			}

			init_effect = {
				random_tile = {
					limit = { has_blocker = no has_building = no num_adjacent_tiles > 3 }
					set_building = "building_capital_1"
					add_resource = {
						resource = food
						amount = 1
						replace = yes
					}	
					add_resource = {
						resource = minerals
						amount = 1
					}					
					random_neighboring_tile = {
						limit = { has_blocker = no has_building = no }
						set_building = "building_hydroponics_farm_1"
						add_resource = {
							resource = food
							amount = 1
							replace = yes
						}						
					}
					random_neighboring_tile = {
						limit = { has_blocker = no has_building = no }
						set_building = "building_power_plant_1"
						add_resource = {
							resource = energy
							amount = 1
							replace = yes
						}						
					}
					random_neighboring_tile = {
						limit = { has_blocker = no has_building = no }
						set_building = "building_power_plant_1"
						add_resource = {
							resource = energy
							amount = 1
							replace = yes
						}						
					}
					random_neighboring_tile = {
						limit = { has_blocker = no has_building = no }
						set_building = "building_mining_network_1"
						add_resource = {
							resource = minerals
							amount = 1
							replace = yes
						}						
					}				
				}
				random_tile = {
					limit = { has_blocker = no has_building = no }
					set_blocker = "tb_failing_infrastructure"
					add_resource = {
						resource = engineering_research
						amount = 1
						replace = yes
					}				
				}
				random_tile = {
					limit = { has_blocker = no has_building = no }
					set_blocker = "tb_failing_infrastructure"
					add_resource = {
						resource = society_research
						amount = 1
						replace = yes
					}				
				}
				random_tile = {
					limit = { has_blocker = no has_building = no }
					set_blocker = "tb_failing_infrastructure"
					add_resource = {
						resource = physics_research
						amount = 1
						replace = yes
					}				
				}
				random_tile = {
					limit = { has_blocker = no has_building = no }
					set_blocker = "tb_decrepit_dwellings"
					add_resource = {
						resource = energy
						amount = 2
						replace = yes
					}					
				}
				random_tile = {
					limit = { has_blocker = no has_building = no }
					set_blocker = "tb_decrepit_dwellings"
					add_resource = {
						resource = food
						amount = 1
						replace = yes
					}					
				}
				random_tile = {
					limit = { has_blocker = no has_building = no }
					set_blocker = "tb_decrepit_dwellings"
					add_resource = {
						resource = energy
						amount = 1
						replace = yes
					}				
				}
				random_tile = {
					limit = { has_blocker = no has_building = no }
					add_resource = {
						resource = food
						amount = 1
						replace = yes
					}				
				}			
			}			
		}

		moon = {
			name = 'Sphinx'
			class = "pc_continental"
			orbit_distance = 10
			orbit_angle = 180
			size =  { min = 16 max = 25 }
			has_ring = no
			init_effect = {

				random_tile = {
					add_resource = {
						resource = "sr_alien_pets"
						amount = 1
						replace = no
					}
				}	

				random_tile = {
					add_resource = {
						resource = "sr_alien_pets"
						amount = 1
						replace = no
					}
				}	

				random_tile = {
					add_resource = {
						resource = "sr_alien_pets"
						amount = 1
						replace = no
					}
				}
			}
		}

		moon = {
			name = "Draco"
			class = "pc_gas_giant"
			orbit_distance = 25
			orbit_angle = 90
			size = 25
			has_ring = no
		}
		
		moon = {
			name = "Roc"
			class = "pc_gas_giant"
			orbit_distance = 25
			orbit_angle = 180
			size = 25
			has_ring = yes
		}
		
		moon = {
			name = "Wyvern"
			class = "pc_gas_giant"
			orbit_distance = 50
			orbit_angle = 180
			size = 25
			has_ring = no
		}

	}


	planet = {
		name = "Manticore B"
		class = star
		orbit_distance = 0
		orbit_angle = 180
		size = 10	

		moon = {
			name = "Erinye"
			class = "pc_molten"
			orbit_distance = 10
			orbit_angle = 90
			size = 10
			has_ring = no
		}
	
		moon = {
			name = "Gorgon"
			class = "pc_molten"
			orbit_distance = 10
			orbit_angle = 90
			size = 10
			has_ring = no
		}
		
		moon = {
			name = "Aphrodite"
			class = "pc_barren"
			orbit_distance = 10
			orbit_angle = 90
			size = 10
			has_ring = no
		}
		
		moon = {
			name = "Damocles"
			class = "pc_barren"
			orbit_distance = 10
			orbit_angle = 90
			size = 10
			has_ring = no
		}
		
		moon = {
			name = "Gryphon"
			class = "pc_continental"
			orbit_distance = 20
			orbit_angle = 90
			size = { min = 16 max = 25 }
			has_ring = no
			
			init_effect = {
				prevent_anomaly = yes
			}	
		}

		moon = {
			name = "Titan"
			class = "pc_gas_giant"
			orbit_distance = 25
			orbit_angle = 180
			size = 25
			has_ring = no
		}
		
		moon = {
			name = "Fenris"
			class = "pc_gas_giant"
			orbit_distance = 50
			orbit_angle = 90
			size = 25
			has_ring = no
		}

	}

	neighbor_system = {
		distance = { min = 10 max = 100 }
		initializer = "basilisk_system_initializer"
	}

	neighbor_system = {
		distance = { min = 10 max = 100 }
		initializer = "trevor_star_initializer"
	}

	neighbor_system = {
		distance = { min = 10 max = 100 }
		initializer = "hancock_system_initializer"
	}

	neighbor_system = {
		distance = { min = 10 max = 100 }
		initializer = "elric_system_initializer"
	}

	neighbor_system = {
		distance = { min = 10 max = 100 }
		initializer = "grendelsbane_system_initializer"
	}

}

# There is no real information about the Basilisk system aside from Medusa and the Wormhole Terminus
# I've decided to let it randomly spawn some uninhabitable bodies to keep the system from being too
# sparse. It's safe to assume that there are other planets/planetoids in the system that just weren't
# worth mentioning.

basilisk_system_initializer = {
	name = "Basilisk"
	
	class = sc_g
	flags = { basilisk_system }		
	
	planet = {
		name = "Basilisk"
		class = "pc_g_star"
		orbit_distance = 0
		orbit_angle = 1
		size = 10
		has_ring = no
	}

	planet = {
		count = { min = 1 max = 2 } 
		class = "pc_molten"
		orbit_distance = { min = 10 max = 20 }
		size = { min = 8 max = 12 }
	}
	
	planet = {
		name = "Medusa"
		class = "pc_continental"
		orbit_distance = 25
		orbit_angle = 90
		size = { min = 18 max = 25 }
		has_ring = no
		modifiers = none
	}

	planet = {
		count = { min = 2 max = 5 } 
		class = random_non_colonizable
		orbit_distance = { min = 15 max = 25 }
		size = { min = 10 max = 25 }
	}
}

trevor_star_initializer = {
	name = "Trevor's Star"
	
	class = sc_g
	
	planet = {
		name = "Trevor's Star"
		class = "pc_g_star"
		orbit_distance = 0
		orbit_angle = 1
		size = 10
		has_ring = no
	}

	planet = {
		count = { min = 1 max = 2 } 
		class = "pc_molten"
		orbit_distance = { min = 10 max = 20 }
		size = { min = 8 max = 12 }
	}
	
	planet = {
		name = "San Martin"
		class = "pc_continental"
		orbit_distance = 25
		orbit_angle = 90
		size = { min = 18 max = 25 }
		has_ring = no
		modifier = "pm_high_gravity"

		init_effect = {
			add_modifier = {
				modifier = "high_gravity"
				days = -1
			}		
		}
	}

	planet = {
		count = { min = 2 max = 5 } 
		class = random_non_colonizable
		orbit_distance = { min = 15 max = 25 }
		size = { min = 10 max = 25 }
	}

	planet = {
		count = { min = 1 max = 3 } 
		class = "pc_gas_giant"
		orbit_distance = { min = 15 max = 25 }
		size = { min = 20 max = 30 }

		moon = {
			count = { min = 0 max = 4 }
			class = random_non_colonizable 	
		}
	}
}

# Again, not much is known about the complete astrography of the Hancock system except
# that it's an M-type star with an asteroid belt. I am assuming some other celestial bodies 
# exist in the system though.

hancock_system_initializer = {
	name = "Hancock"
	
	class = sc_m
	asteroids_distance = 150

	flags = { hancock_system }		
	
	
	planet = {
		name = "Hancock"
		class = "pc_m_star"
		orbit_distance = 0
		orbit_angle = 1
		size = 10
		has_ring = no
	}

	planet = {
		count = { min = 1 max = 2 } 
		class = "pc_molten"
		orbit_distance = { min = 10 max = 20 }
		size = { min = 8 max = 12 }
	}

	planet = {
		count = { min = 2 max = 5 } 
		class = random_non_colonizable
		orbit_distance = { min = 15 max = 25 }
		size = { min = 18 max = 25 }
	}

	change_orbit = 150

	planet = {
		count = { min = 1 max = 4 } 
		class = random_asteroid
		orbit_distance = 0
	}
	
}

elric_system_initializer = {
	name = "Elric"

	class = sc_m

	planet = {
		name = "Elric"
		class = "pc_m_star"
		orbit_distance = 0
		orbit_angle = 1
		size = 10
		has_ring = no
	}

	planet = {
		count = { min = 1 max = 2 } 
		class = "pc_molten"
		orbit_distance = { min = 10 max = 20 }
		size = { min = 8 max = 12 }
	}
	
	planet = {
		name = "Zelda"
		class = "pc_continental"
		orbit_distance = 25
		orbit_angle = 90
		size = { min = 10 max = 25 }
		has_ring = no
	}

	planet = {
		count = { min = 2 max = 5 } 
		class = random_non_colonizable
		orbit_distance = { min = 15 max = 25 }
		size = { min = 10 max = 25 }
	}


}

# Again, we have no real information about Grendelsbane so we'll just let it be random
grendelsbane_system_initializer = {
	name = "Grendelsbane"

	class = sc_m

	planet = {
		name = "Grendelsbane"
		class = "pc_m_star"
		orbit_distance = 0
		orbit_angle = 1
		size = 10
		has_ring = no
	}

	planet = {
		count = { min = 4 max = 8 }
		size = { min = 10 max = 30 }
	}
}